Добрый день!

Как обычно небольшой комментарий

При выполнении задания, предполагаю, что настройка подключения к серверу уже настроена т.е. нет
необходимости вновь делать глобальные настройки имени, мейла, ввода пароля

Я работаю через ATOM с нужным для работой с git расширением.
У него есть две особенности
Во-первых, не требует каждый раз при пуше ввода логина и пароля, достаточно ввести один раз
Во-вторых, я так и не понял, как там работает функция git commit, точнее она открывает с самом
редакторе commit файл с комментариями, но сам коммит как далее запустить я так и не понял.
Но там есть очень удобный скажем так сайтбар, через который коммит очень удобно делается, его и
использовал. Однако ниже буду все же писать комманду git commit имея ввиду, что мы фиксируем изменения

Внутри репозитория у меня собственно есть файл GITcomment.txt, это собственно и есть тот файл, который
Вы сейчас читаете. Если нужно, могу отправить все файлы проекта.


Итак, давайте к делу.

Прежде всего создаем репозиторий, с которым работаем, создаем там несколько папок, некоторые корневые файлы.
Обязательно как по заданию создаем папки bin, admin, config а так же пару файлов *.sass, один допустим в корне
второй в какой-то папке

Сразу создаем файл .gitignore в котором прописываем следующее содержимое
*.sass
bin/
admin/
config/
тем самым делаем нужные нам игнорирования

Далее непосредственно через git делаем следующие команды
git init - инициализируем git

git add . - добавляем в контроль текущие файлы с учетом .gitignore
git status - проверяем все ли правильно добавилось, все ли правильно игнорируется
git commit - фиксируем текущее состояние для того, чтобы автоматом создалась ветка master
дело в том, что без фиксации ветки не создаются, насколько я понял, нужно сделать хотя бы одну
фиксацию, чтобы указалась ветка master и далее можем работать с ветками

git status - проверяем, все ли вышло из комита и соответственно зафиксировалось

git branch blog - создаем ветку blog
git checkout blog - переключаемся на ветку блога

...... вручную создаем папку blog и файлы index.js, index.html в ней

git add . - тремя командами ниже фиксируем ветку blog
git status
git commit

git commit master - переключаемся в ветку master, смотрим пропала ли папка blog из списка файлов, тем самым
убеждаемся что все работает корркетно с ветками

git remote add origin https://github.com/czseo/dz_github.git - устанавливаем путь к удаленному репозиторию
git remote -v - проверяем установился ли нужный репозиторий.
git push -u origin master - заливаем файлы с ветки master

Проверяем результат по ссылке
https://github.com/czseo/dz_github

Вроде бы получается что все

Заранее благодарю Вас за проверку!
